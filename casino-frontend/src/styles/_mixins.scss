@use 'sass:color';
@use 'variables' as *;

// Mixin para responsividade
@mixin respond-to($breakpoint) {
  @if $breakpoint == mobile {
    @media (max-width: #{$mobile - 1px}) {
      @content;
    }
  }
  @if $breakpoint == tablet {
    @media (min-width: #{$mobile}) and (max-width: #{$tablet - 1px}) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media (min-width: #{$tablet}) {
      @content;
    }
  }
  @if $breakpoint == large-desktop {
    @media (min-width: #{$large-desktop}) {
      @content;
    }
  }
}

// Mixin para flexbox centralizado
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Mixin para botões
@mixin button-style($bg-color, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  padding: $spacing-sm $spacing-md;
  border-radius: $border-radius-md;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
  
  &:hover {
    background-color: color.adjust($bg-color, $lightness: -10%);
    transform: translateY(-2px);
    box-shadow: $shadow-md;
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:disabled {
    background-color: color.adjust($bg-color, $lightness: 20%);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
}

// Mixin para cards
@mixin card-style {
  background-color: $background-card;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  padding: $spacing-lg;
  margin-bottom: $spacing-md;
}

// Mixin para animações de entrada
@mixin fade-in-animation($duration: 0.3s) {
  animation: fadeIn $duration ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}